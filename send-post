import com.sterlingcommerce.woodstock.workflow.Document;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.InputStreamReader;
import org.apache.commons.json.JSONObject;
import java.io.BufferedInputStream;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.OutputStreamWriter;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.UnknownHostException;
import java.util.ArrayList;
import java.io.ByteArrayOutputStream;


String boundaryString = Long.toHexString(System.currentTimeMillis());
String jsonWebToken = (String)wfc.getWFContent("access_token");
String tjprEndPoint = (String)wfc.getWFContent("endPoint");
final int TIMEOUT = 15000;
int nRead = 0;
ByteArrayOutputStream buffer = new ByteArrayOutputStream();
byte[] data = new byte[4];
String fileName = (String)wfc.getWFContent("FileName");
BufferedReader in = null;
BufferedWriter httpRequestBodyWriter = null;
HttpURLConnection urlConnection = null;
OutputStream outputStreamToRequestBody = null;
FileInputStream inputStreamToFile = null;
StringBuffer response = new StringBuffer();
Document document = new Document();
Document srcDoc = wfc.getPrimaryDocument();
InputStream is = srcDoc.getInputStream();
try{
  while((nRead = is.read(data,0,data.length)) !=-1){
    buffer.write(data,0,nRead);
  }
  buffer.flush();
  byte[] fileToUpload = buffer.toByteArray();
  URL serverUrl =  new URL(endPoint);
  urlConnection = (HttpURLConnection) serverUrl.openConnection();
  urlConnection.setConnectTimeout(TIMEOUT);
  urlConnection.setReadTimeout(TIMEOUT);
  urlConnection.setDoOutput(true);
  urlConnection.setRequestMethod("POST");
  urlConnection.addRequestProperty("Authorization","Bearer "+ jsonWebToken);
  urlConnection.addRequestProperty("Accept","*/*");
  urlConnection.addRequestProperty("Accept-Encoding","gzip, deflate" );
  urlConnection.addRequestProperty("Content-Type", "multipart/form-data; boundary=" + boundaryString);
  outputStreamToRequestBody = urlConnection.getOutputStream();
  httpRequestBodyWriter = new BufferedWriter(new OutputStreamWriter(outputStreamToRequestBody));
  httpRequestBodyWriter.write("--" + boundaryString + "\r\n");
  httpRequestBodyWriter.write("Content-Disposition: form-data;"
   + " name=\"File\";"
                    + " filename=\""+ fileName +"\""+"\r\n"
                    + "Content-Type: application/octet-stream\r\n");
            httpRequestBodyWriter.write("\r\n");
            httpRequestBodyWriter.flush();
            ByteArrayInputStream byteStreamToFile = new ByteArrayInputStream(fileToUpload);
            int bytesRead;
            byte[] dataBuffer = new byte[1024];
            while((bytesRead = byteStreamToFile.read(dataBuffer)) != -1) {
                outputStreamToRequestBody.write(dataBuffer, 0, bytesRead);
            }
            outputStreamToRequestBody.flush();
            httpRequestBodyWriter.write("\r\n");
            httpRequestBodyWriter.write("\r\n--" + boundaryString + "--\r\n");
            httpRequestBodyWriter.write("\r\n");
            httpRequestBodyWriter.flush();
            in = null;
            try {
                if(urlConnection.getResponseCode() != HttpURLConnection.HTTP_OK) {
                    in = new BufferedReader(
                            new InputStreamReader(urlConnection.getErrorStream()));
                }else {
                    in = new BufferedReader(
                            new InputStreamReader(urlConnection.getInputStream()));
                }
                String inputLine;
                while ((inputLine = in.readLine()) != null) {
                    response.append(inputLine);
                }
            }catch(Exception ex){
                wfc.addWFContent("HTTPResponse",ex.getMessage()); 
                throw new Exception("ERROR: "+ ex.getMessage() );
            }
}catch (Exception ex) {
    wfc.addWFContent("HTTPResponse",ex.getMessage());
    throw new Exception("ERROR: "+ ex.getMessage() );
}finally{
    urlConnection.disconnect();
    if (inputStreamToFile != null){
        outputStreamToRequestBody.close();
    }
    if (inputStreamToFile != null){
        inputStreamToFile.close();
    }
    if (inputStreamToFile != null){
        httpRequestBodyWriter.close();
    }
    if (in != null){
        in.close();
    }

}
wfc.setAdvancedStatus("POST");        
wfc.setBasicStatus(000);        
wfc.addWFContent("HTTPResponse",response.toString());  
String responseCode = Integer.toString(urlConnection.getResponseCode());
wfc.addWFContent("ResponseCode",responseCode);  
return "000";

